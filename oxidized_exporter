#!/usr/bin/env python3

import requests
import configparser
from prometheus_client import start_http_server, Metric, REGISTRY
import time


class OxidizedCollector(object):
    def __init__(self, oxidized_url):
        self.oxidized_url = oxidized_url

    def collect(self):
        metric = Metric('oxidized_status', 'Most recent oxidized status', 'gauge')
        urls = self.oxidized_url.split(',')
        for url in urls:
            response = requests.get(url + "/nodes.json").json()
            for node in response:
                status = 1 if node['status'] == 'success' else 0
                metric.add_sample('oxidized_status', value=status, labels={'instance': node['name']})
                print("request!")

        yield metric

if __name__ == "__main__":
    print('hello')
    start_http_server(5002)
    config = configparser.ConfigParser()
    config.read('oxidized.conf')
    REGISTRY.register(OxidizedCollector(config['default']['url']))

    while True:
        time.sleep(1)
